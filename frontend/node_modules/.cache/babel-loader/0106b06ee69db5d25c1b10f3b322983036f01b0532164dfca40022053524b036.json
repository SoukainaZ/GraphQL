{"ast":null,"code":"var _jsxFileName = \"/Users/soukaina/Desktop/bank-accounts/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AccountForm from \"./components/AccountForm\";\nimport AccountTable from \"./components/AccountTable\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // État initial avec un tableau vide ou des données de test\n  const [accounts, setAccounts] = useState([{\n    id: 1,\n    solde: 1000,\n    type: \"COURANT\",\n    dateCreation: \"2024-01-15\"\n  }, {\n    id: 2,\n    solde: 5000,\n    type: \"EPARGNE\",\n    dateCreation: \"2024-02-20\"\n  }]);\n\n  // Fonction pour ajouter un nouveau compte\n  const handleAddAccount = formData => {\n    const newAccount = {\n      id: accounts.length + 1,\n      solde: parseFloat(formData.solde),\n      type: formData.type,\n      dateCreation: formData.dateCreation\n    };\n    setAccounts(prevAccounts => [...prevAccounts, newAccount]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-8\",\n        children: \"Gestion des Comptes Bancaires\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccountForm, {\n        onAddAccount: handleAddAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccountTable, {\n        accounts: accounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U8NGHyVvBTqR8018r21gUaizfv8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AccountForm","AccountTable","jsxDEV","_jsxDEV","App","_s","accounts","setAccounts","id","solde","type","dateCreation","handleAddAccount","formData","newAccount","length","parseFloat","prevAccounts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddAccount","_c","$RefreshReg$"],"sources":["/Users/soukaina/Desktop/bank-accounts/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AccountForm from \"./components/AccountForm\";\nimport AccountTable from \"./components/AccountTable\";\nimport \"./App.css\";\n\nfunction App() {\n  // État initial avec un tableau vide ou des données de test\n  const [accounts, setAccounts] = useState([\n    {\n      id: 1,\n      solde: 1000,\n      type: \"COURANT\",\n      dateCreation: \"2024-01-15\",\n    },\n    {\n      id: 2,\n      solde: 5000,\n      type: \"EPARGNE\",\n      dateCreation: \"2024-02-20\",\n    },\n  ]);\n\n  // Fonction pour ajouter un nouveau compte\n  const handleAddAccount = (formData) => {\n    const newAccount = {\n      id: accounts.length + 1,\n      solde: parseFloat(formData.solde),\n      type: formData.type,\n      dateCreation: formData.dateCreation,\n    };\n    setAccounts((prevAccounts) => [...prevAccounts, newAccount]);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 py-8\">\n      <div className=\"container mx-auto px-4\">\n        <h1 className=\"text-3xl font-bold text-center mb-8\">\n          Gestion des Comptes Bancaires\n        </h1>\n        <AccountForm onAddAccount={handleAddAccount} />\n        <AccountTable accounts={accounts} />{\" \"}\n        {/* Assurez-vous de passer accounts ici */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,YAAY,EAAE;EAChB,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,SAAS;IACfC,YAAY,EAAE;EAChB,CAAC,CACF,CAAC;;EAEF;EACA,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMC,UAAU,GAAG;MACjBN,EAAE,EAAEF,QAAQ,CAACS,MAAM,GAAG,CAAC;MACvBN,KAAK,EAAEO,UAAU,CAACH,QAAQ,CAACJ,KAAK,CAAC;MACjCC,IAAI,EAAEG,QAAQ,CAACH,IAAI;MACnBC,YAAY,EAAEE,QAAQ,CAACF;IACzB,CAAC;IACDJ,WAAW,CAAEU,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,UAAU,CAAC,CAAC;EAC9D,CAAC;EAED,oBACEX,OAAA;IAAKe,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC5ChB,OAAA;MAAKe,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrChB,OAAA;QAAIe,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLpB,OAAA,CAACH,WAAW;QAACwB,YAAY,EAAEZ;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CpB,OAAA,CAACF,YAAY;QAACK,QAAQ,EAAEA;MAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAxCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
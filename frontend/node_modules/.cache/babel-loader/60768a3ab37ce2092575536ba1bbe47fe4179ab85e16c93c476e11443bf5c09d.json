{"ast":null,"code":"var _jsxFileName = \"/Users/soukaina/development/AC/graph-ql-front/src/components/AccountTable.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ALL_COMPTES } from \"../graphql/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountTable() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_COMPTES);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Erreur...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl text-blue-600 font-bold p-4 border-b\",\n      children: \"Comptes Bancaires\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-4 text-gray-600\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-4 text-gray-600\",\n              children: \"SOLDE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-4 text-gray-600\",\n              children: \"TYPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-4 text-gray-600\",\n              children: \"DATE CR\\xC9ATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.allComptes.map(compte => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-t\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-4\",\n              children: compte.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-4\",\n              children: parseFloat(compte.solde).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-4\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 rounded-full text-sm ${compte.type === \"EPARGNE\" ? \"bg-green-100 text-green-800\" : \"bg-yellow-100 text-yellow-800\"}`,\n                children: compte.type === \"EPARGNE\" ? \"Compte Épargne\" : \"Compte Courant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-4\",\n              children: new Date(compte.dateCreation).toLocaleDateString(\"fr-FR\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, compte.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountTable, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = AccountTable;\nexport default AccountTable;\nvar _c;\n$RefreshReg$(_c, \"AccountTable\");","map":{"version":3,"names":["useQuery","GET_ALL_COMPTES","jsxDEV","_jsxDEV","AccountTable","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","allComptes","map","compte","id","parseFloat","solde","toFixed","type","Date","dateCreation","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/soukaina/development/AC/graph-ql-front/src/components/AccountTable.jsx"],"sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport { GET_ALL_COMPTES } from \"../graphql/queries\";\n\nfunction AccountTable() {\n  const { loading, error, data } = useQuery(GET_ALL_COMPTES);\n\n  if (loading) {\n    return <div>Chargement...</div>;\n  }\n\n  if (error) {\n    return <div>Erreur...</div>;\n  }\n\n  return (\n    <div className=\"bg-white rounded shadow\">\n      <h2 className=\"text-xl text-blue-600 font-bold p-4 border-b\">\n        Comptes Bancaires\n      </h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"bg-gray-50\">\n              <th className=\"text-left p-4 text-gray-600\">ID</th>\n              <th className=\"text-left p-4 text-gray-600\">SOLDE</th>\n              <th className=\"text-left p-4 text-gray-600\">TYPE</th>\n              <th className=\"text-left p-4 text-gray-600\">DATE CRÉATION</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.allComptes.map((compte) => (\n              <tr key={compte.id} className=\"border-t\">\n                <td className=\"p-4\">{compte.id}</td>\n                <td className=\"p-4\">{parseFloat(compte.solde).toFixed(2)}</td>\n                <td className=\"p-4\">\n                  <span\n                    className={`px-2 py-1 rounded-full text-sm ${\n                      compte.type === \"EPARGNE\"\n                        ? \"bg-green-100 text-green-800\"\n                        : \"bg-yellow-100 text-yellow-800\"\n                    }`}\n                  >\n                    {compte.type === \"EPARGNE\"\n                      ? \"Compte Épargne\"\n                      : \"Compte Courant\"}\n                  </span>\n                </td>\n                <td className=\"p-4\">\n                  {new Date(compte.dateCreation).toLocaleDateString(\"fr-FR\")}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountTable;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACC,eAAe,CAAC;EAE1D,IAAIK,OAAO,EAAE;IACX,oBAAOH,OAAA;MAAAM,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,IAAIN,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAM,QAAA,EAAK;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7B;EAEA,oBACEV,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAL,QAAA,gBACtCN,OAAA;MAAIW,SAAS,EAAC,8CAA8C;MAAAL,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLV,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAL,QAAA,eAC9BN,OAAA;QAAOW,SAAS,EAAC,QAAQ;QAAAL,QAAA,gBACvBN,OAAA;UAAAM,QAAA,eACEN,OAAA;YAAIW,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACxBN,OAAA;cAAIW,SAAS,EAAC,6BAA6B;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnDV,OAAA;cAAIW,SAAS,EAAC,6BAA6B;cAAAL,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDV,OAAA;cAAIW,SAAS,EAAC,6BAA6B;cAAAL,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrDV,OAAA;cAAIW,SAAS,EAAC,6BAA6B;cAAAL,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRV,OAAA;UAAAM,QAAA,EACGD,IAAI,CAACO,UAAU,CAACC,GAAG,CAAEC,MAAM,iBAC1Bd,OAAA;YAAoBW,SAAS,EAAC,UAAU;YAAAL,QAAA,gBACtCN,OAAA;cAAIW,SAAS,EAAC,KAAK;cAAAL,QAAA,EAAEQ,MAAM,CAACC;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpCV,OAAA;cAAIW,SAAS,EAAC,KAAK;cAAAL,QAAA,EAAEU,UAAU,CAACF,MAAM,CAACG,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC;YAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9DV,OAAA;cAAIW,SAAS,EAAC,KAAK;cAAAL,QAAA,eACjBN,OAAA;gBACEW,SAAS,EAAE,kCACTG,MAAM,CAACK,IAAI,KAAK,SAAS,GACrB,6BAA6B,GAC7B,+BAA+B,EAClC;gBAAAb,QAAA,EAEFQ,MAAM,CAACK,IAAI,KAAK,SAAS,GACtB,gBAAgB,GAChB;cAAgB;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLV,OAAA;cAAIW,SAAS,EAAC,KAAK;cAAAL,QAAA,EAChB,IAAIc,IAAI,CAACN,MAAM,CAACO,YAAY,CAAC,CAACC,kBAAkB,CAAC,OAAO;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC;UAAA,GAlBEI,MAAM,CAACC,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBd,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACR,EAAA,CAtDQD,YAAY;EAAA,QACcJ,QAAQ;AAAA;AAAA0B,EAAA,GADlCtB,YAAY;AAwDrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}